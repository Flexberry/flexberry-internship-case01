//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.ThermoObjectTask6
{
    using System;
    using System.Xml;
    
    
    // *** Start programmer edit section *** (Using statements)
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;


    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.FunctionalLanguage;
    using ICSSoft.STORMNET.FunctionalLanguage.SQLWhere;

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Ц бкод дубли у сплощади ОТ.
    /// </summary>
    // *** Start programmer edit section *** (ОбъектыТеплопотребленияBS CustomAttributes)

    // *** End programmer edit section *** (ОбъектыТеплопотребленияBS CustomAttributes)
    [ICSSoft.STORMNET.AccessType(ICSSoft.STORMNET.AccessType.none)]
    public class ОбъектыТеплопотребленияBS : ICSSoft.STORMNET.Business.BusinessServer
    {
        
        // *** Start programmer edit section *** (ОбъектыТеплопотребленияBS CustomMembers)

        // *** End programmer edit section *** (ОбъектыТеплопотребленияBS CustomMembers)

        
        // *** Start programmer edit section *** (OnUpdateОбъектТеплопотребления CustomAttributes)

        // *** End programmer edit section *** (OnUpdateОбъектТеплопотребления CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateОбъектТеплопотребления(IIS.ThermoObjectTask6.ОбъектТеплопотребления UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateОбъектТеплопотребления)
            //Генерируем цифро-буквенный код для объекта теплопотребления
            if (UpdatedObject.GetStatus() != ObjectStatus.Deleted)
            {
                string QRcode = CreateCode.FirstCreateCode.GenerateCode(UpdatedObject.Название, UpdatedObject.ДатаУстановки, UpdatedObject.Потребитель.ЛицевойСчёт);
                UpdatedObject.ЦБкод = QRcode;
            }

            //Проверка на дублирование участков сети
            bool IsDuplicatedNetwork = false;
            var Networks = UpdatedObject.УчастокСети.Cast<УчастокСети>().Where(x=>x.GetStatus() != ObjectStatus.Deleted).OrderBy(x => x.Номер);
            Dictionary<int, ТипыПрокладки> NumbersAndTypesOfIsolation = new Dictionary<int, ТипыПрокладки>();

            foreach (УчастокСети z in Networks)
            {
                if (NumbersAndTypesOfIsolation.ContainsKey(z.Номер))
                {
                    if (NumbersAndTypesOfIsolation.ContainsValue(z.ТипПрокладки))
                    {
                        throw new Exception("Обнаружены дубли участков сети");
                        IsDuplicatedNetwork = true;
                    }
                }
                else NumbersAndTypesOfIsolation.Add(z.Номер, z.ТипПрокладки);
            }
            return new ICSSoft.STORMNET.DataObject[0];
            // *** End programmer edit section *** (OnUpdateОбъектТеплопотребления)
        }
        
        // *** Start programmer edit section *** (OnUpdateЗдание CustomAttributes)

        // *** End programmer edit section *** (OnUpdateЗдание CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateЗдание(IIS.ThermoObjectTask6.Здание UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateЗдание)
            if (UpdatedObject.GetStatus() != ObjectStatus.Deleted)
            {
                var ThermoObjectsInBuilding = UpdatedObject.ОбъектТеплопотребления.Cast<ОбъектТеплопотребления>().Where(x => x.GetStatus() != ObjectStatus.Deleted);
                UpdatedObject.ПлощадьВсехОТ = 0;

                foreach (ОбъектТеплопотребления z in ThermoObjectsInBuilding)
                {
                    UpdatedObject.ПлощадьВсехОТ += z.Площадь;
                }

            }
            return new ICSSoft.STORMNET.DataObject[0];
            // *** End programmer edit section *** (OnUpdateЗдание)
        }
    }
}
